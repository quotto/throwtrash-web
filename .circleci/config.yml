version: "2.1"
jobs:
  test:
    docker:
      - image: circleci/node:10.1.0
    steps:
      - checkout
      - run:
          name: install
          command: npm install
          working_directory: server
      - run:
          name: backend test
          command: npm test
          working_directory: server
      - run:
          name: frontend test
          command: npm run test-front
          working_directory: server
  deploy:
    docker:
      - image: kroniak/ssh-client
    steps:
      - add_ssh_keys:
          fingerprints:
            - ${SSH_KEY_STAGING}
            - ${SSH_KEY_PRODUCTION}
      - run:
          command: |
            mkdir ~/.ssh
            chmod 700 ~/.ssh
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              HOST_NAME=${HOST_PRODUCTION}
            else
              HOST_NAME=${HOST_STAGING}
            fi
            ssh-keyscan -H ${HOST_NAME} >> ~/.ssh/known_hosts
            ssh ${SSH_USER}@${HOST_NAME} 'hostname'
            # ssh ${USER_NAME}@${HOST_NAME} 'sudo docker run --rm -v ${PROJECT_DIRECTORY}:/git alpine/git fetch && checkout ${CIRCLE_BRANCH}'
            # ssh ${USER_NAME}@${HOST_NAME} 'sudo docker-compose -f ${PROJECT_DIRECTORY}/docker/docker-compose.xml restart node'
    
workflows:
  version: 2
  test_and_deploy:
    jobs:
      - test:
          context: aws-test
      - deploy:
          requires:
            - test