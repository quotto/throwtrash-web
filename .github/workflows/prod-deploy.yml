name: Production Deploy
on:
  push:
    branches:
    - test-deploy
permissions:
  contents: read
  id-token: write
env:
  FRONT_STAGE: v5
  BACK_STAGE: v5
  MOBILE_API_STAGE: v5
jobs:
  # frontend-build:
  #   runs-on: ubuntu-latest
  #   environment: prod
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Set up Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '14.x'
  #     - name: Restore frontend cache
  #       uses: actions/cache@v2
  #       with:
  #         path: frontend/node_modules
  #         key: npm-deps-${{ github.ref_name }}-${{ hashFiles('frontend/package-lock.json') }}
  #     - name: Install dependencies
  #       run: npm ci
  #       working-directory: frontend
  #     - name: Build frontend
  #       run: npm run build -- --env stage=${{ env.BACK_STAGE }} --env front_stage=${{ env.FRONT_STAGE }}
  #       working-directory: frontend
  #     - name: Archive frontend
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: frontend
  #         path: frontend/frontend-dist/${{ env.FRONT_STAGE }}
  #         retention-days: 30
  # frontend-deploy:
  #   needs: ["frontend-build"]
  #   environment: prod
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Download frontend artifact
  #       uses: actions/download-artifact@v4.1.7
  #       with:
  #         name: frontend
  #         path: frontend
  #     - name: AWS Set up
  #       uses: aws-actions/configure-aws-credentials@v4
  #       with:
  #         role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/throwtrash-api-tester-role
  #         aws-region: ${{ vars.AWS_DEFAULT_REGION }}
  #     - name: S3 Sync
  #       run: |
  #         bucket_name="throwtrash"
  #         aws s3 sync frontend/${{ env.FRONT_STAGE }} s3://${bucket_name}/${{ env.FRONT_STAGE }}
  #         # 本番デプロイ時はデプロイステージのキャッシュをクリア
  #         aws cloudfront create-invalidation --distribution-id ${{ vars.AWS_CLOUDFRONT_DST_ID }} --paths /${{ env.FRONT_STAGE }}/*
  get-pr-number:
    runs-on: ubuntu-latest
    outputs:
      pr_number: ${{ steps.findPr.outputs.pr }}
    steps:
      - uses: jwalton/gh-find-current-pr@master
        id: findPr
        with:
          state: open
      - name: Set PR number
        run: echo "pr_number=${{ steps.findPr.outputs.pr }}" >> $GITHUB_OUTPUT
  backend-deploy:
    needs: ["get-pr-number"]
    environment: prod
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/throwtrash-api-deploy-role
          aws-region: ${{ vars.AWS_DEFAULT_REGION }}
      - name: Backend ChangeSet Execute
        run: |
          aws cloudformation execute-change-set --change-set-name deploy-${{ needs.get-pr-number.outputs.pr_number }} --stack-name throwtrash-backend-${{ env.BACK_STAGE }} --region ${{ vars.AWS_DEFAULT_REGION }}
  mobile-backend-deploy:
    needs: ["get-pr-number"]
    environment: prod
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/throwtrash-api-deploy-role
          aws-region: ${{ vars.AWS_DEFAULT_REGION }}
      - name: Mobile Backend ChangeSet Execute
        run: |
          aws cloudformation execute-change-set --change-set-name deploy-${{ needs.get-pr-number.outputs.pr_number }} --stack-name throwtrash-mobile-${{ env.MOBILE_API_STAGE }} --region ${{ vars.AWS_DEFAULT_REGION }}
